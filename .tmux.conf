
# keybindings
set -g prefix C-a
unbind %
bind-key k select-pane -U
bind-key j select-pane -D
bind-key h select-pane -L
bind-key l select-pane -R
# Set new panes to open in current directory
bind c new-window -c "#{pane_current_path}"
bind '"' split-window -c "#{pane_current_path}"
# bind % split-window -h -c "#{pane_current_path}"
bind \\ split-window -h -c "#{pane_current_path}"

# allow vim bindings for copy and paste
set-window-option -g mode-keys vi

set -g history-limit 10000

# allow nested tmux sessions
bind-key a send-prefix

# Renumber windows when one of them is closed
set-option -g renumber-windows on


# Trying to set up very nice colors b/w tmux, terminal, and vim.
# see here: https://paulgessinger.com/posts/2020/full-gui-colors-in-iterm-tmux-and-vim/
#=======================================

# NOTE: for tmux-256color to work, must first run:
# sudo /usr/bin/tic -xe tmux-256color misc/terminfo.src
# May also need: infocmp -x tmux-256color
# If not, can instead just switch from tmux-256color --> xterm-256color.
set-option -g default-terminal "tmux-256color"
# This tells tmux to enable full colors if TERM outside is xterm-256color
# This is also called 24-bit or True Colors
set-option -g terminal-overrides ",xterm-256color:RGB"

# mouse mode
set -g mouse on

set -g default-command /bin/bash

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Visual

##### Source file generated via tmuxline.vim (:Tmuxline theme and :TmuxlineSnapshot fileToSource
source ~/.tmuxline
